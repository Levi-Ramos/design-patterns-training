unit Display;

interface

uses Observeru, Subject;

type
	IDisplayElement = interface
    ['{AE7337D1-4A5E-4771-841D-28D6E4DF207B}']
    procedure Display;
  end;

  TCurrentConditionDisplay = class(TInterfacedObject, IObserver, IDisplayElement)
  private
  	FTemperature, FHumidity: Double;
    FWeatherData: ISubject;
  public
  	constructor Create(AWeatherData: ISubject);

    procedure Update(const ATemperature, AHumidity, APressure: Double);
    procedure Display;
  end;

implementation

uses
  System.SysUtils;

{ TCurrentConditionDisplay }

constructor TCurrentConditionDisplay.Create(AWeatherData: ISubject);
begin
	FWeatherData := AWeatherData;
end;

procedure TCurrentConditionDisplay.Display;
begin
	Writeln('Current Conditions: ' +  FTemperature.ToString + 'F degrees');
  Writeln('Humidity: ' + FHumidity.ToString + '%');
end;

procedure TCurrentConditionDisplay.Update(const ATemperature, AHumidity,
  APressure: Double);
begin
	FTemperature := ATemperature;
  FHumidity := AHumidity;
  Display;
end;

end.
